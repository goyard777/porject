/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.53
 * Generated at: 2021-11-08 02:47:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class shoppingbasket_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>장바구니</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- <script language=\"javascript\">\r\n");
      out.write("	httpUrl = \"login.html\"\r\n");
      out.write("	httpUrl2 = \"www.montraum.com\"\r\n");
      out.write("\r\n");
      out.write("	function loginCheck() {\r\n");
      out.write("		location.href=\"login6d1f.html?refer_page=%2Fcommon%2Fall%5Fsite%2Fmember%2Flogin%2Easp\"\r\n");
      out.write("	}\r\n");
      out.write("</script> -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/header.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"../resources/js/top.js\"></script>\r\n");
      out.write("<!--Content영역시작-->\r\n");
      out.write("		<section>\r\n");
      out.write("				<div id=\"page-order-cart\" class=\"pc-width\">\r\n");
      out.write("					<div id=\"navigation-bar\"><script>document.write(navistr)</script></div>\r\n");
      out.write("					<h2 class=\"page-title\"><script>document.write(siteTitle)</script></h2>\r\n");
      out.write("									\r\n");
      out.write("\r\n");
      out.write("					<!-- ms 구매 유도 배너// 추후 저단가 제품 구매 유도 배너로 변경 예정 또는 진행X -->\r\n");
      out.write("					<div class=\"ms-banner\"><a href=\"eventview76d1.html?idx=282\">\r\n");
      out.write("					<img src=\"../resources/images/order_bn.jpg\" border=\"0\" class=\"only-pc\">\r\n");
      out.write("					</a></div>\r\n");
      out.write("					<!-- //ms 구매 유도 배너 -->\r\n");
      out.write("\r\n");
      out.write("				<form name=\"form1\" method=\"post\" action=\"http://www.montraum.com/common/process/shopview_insert_DB.asp\">\r\n");
      out.write("					<div class=\"item-list\">\r\n");
      out.write("						<h2>장바구니</h2>\r\n");
      out.write("						<div class=\"content-desc\">\r\n");
      out.write("							<div class=\"only-pc\">\r\n");
      out.write("								장바구니에 담긴 상품은 1개월 이후 자동삭제 되오니 오래 보관하시려면 로그인 후 위시리스트에 등록하시기 바랍니다.\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"only-mobile\">\r\n");
      out.write("								1개월 이후 자동삭제 되오니 위시리스트에 등록하세요.\r\n");
      out.write("							\r\n");
      out.write("							<br>장바구니에 담긴 상품이 없습니다.\r\n");
      out.write("							\r\n");
      out.write("							</div>\r\n");
      out.write("							\r\n");
      out.write("						</div>\r\n");
      out.write("						<table class=\"item-table\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th class=\"checkbox\"><input type=\"checkbox\" class=\"checkbox-type1\" onclick=\"for(var i=0;i<this.form.order_id.length;i++)this.form.order_id[i].checked=this.checked\"></th>\r\n");
      out.write("								<th class=\"item-info\">상품정보</th>\r\n");
      out.write("								<th class=\"list-price\">판매가격</th>\r\n");
      out.write("								<th class=\"count\">수량</th>\r\n");
      out.write("								<th class=\"now-price\">주문금액</th>\r\n");
      out.write("							</tr>\r\n");
      out.write("													\r\n");
      out.write("\r\n");
      out.write("							<!-- 반복 -->\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td class=\"item-info empty\" colspan=\"5\" align=\"center\">장바구니에 담긴 상품이 없습니다.</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</table>\r\n");
      out.write("						<div class=\"action-buttons\">\r\n");
      out.write("							<span class=\"continue-shopping type1\" onclick=\"location.href='index.html'\">쇼핑계속하기</span>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<div class=\"notice-wrapper clearfix\">\r\n");
      out.write("						<h3>확인해주세요</h3>\r\n");
      out.write("						<ul class=\"notice-list\">\r\n");
      out.write("							<li>총 결제 금액 3만원 이상 무료배송혜택이 제공됩니다.</li>\r\n");
      out.write("							<li>회원가입을 하시면 다양한 할인혜택을 받아보실 수 있습니다.</li>\r\n");
      out.write("							<li>장바구니에 담긴 상품은 1개월 이후 자동삭제 되오니 오래 보관하시려면 로그인 후 위시리스트에 등록하시기 바랍니다.</li>\r\n");
      out.write("							<li>1개월 동안 장바구니에 보관된 상품을 주문하실 경우, 가격이나 혜택이 변동 될 수 있습니다.</li>\r\n");
      out.write("							<li>비회원의 경우 장바구니에 담긴 상품은 브라우저 종료 시 자동으로 삭제됩니다.</li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</div>\r\n");
      out.write("					</div>						\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("		</section>\r\n");
      out.write("<!--Content영역종료-->\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
